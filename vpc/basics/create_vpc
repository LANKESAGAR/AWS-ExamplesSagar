#!/usr/bin/env bash

# Create a VPC
VPC_ID=$(aws ec2 create-vpc \
--cidr-block "172.1.0.0/16" \
--tag-specifications 'ResourceType=vpc, Tags=[{Key=Name, Value=my-vpc-3}]' \
--region us-east-1 \
--query 'Vpc.VpcId' \
--output text)

echo "VPC_ID: $VPC_ID"

#Turn on DNS Hostnames
aws ec2 modify-vpc-attribute --vpc-id $VPC_ID --enable-dns-hostnames "{\"Value\":true}"

# Ensure VPC was created successfully
if [ -z "$VPC_ID" ]; then
echo "Failed to create VPC"
exit 1
fi

# Create an Internet Gateway (IGW)
IGW_ID=$(aws ec2 create-internet-gateway \
--query 'InternetGateway.InternetGatewayId' \
--output text)

echo "IGW_ID: $IGW_ID"

# Ensure IGW was created successfully
if [ -z "$IGW_ID" ]; then
echo "Failed to create Internet Gateway"
exit 1
fi

# Attach the IGW to the VPC
aws ec2 attach-internet-gateway --internet-gateway-id "$IGW_ID" --vpc-id "$VPC_ID"

echo "Successfully attached IGW $IGW_ID to VPC $VPC_ID"


# Create a Subnet
SUBNET_ID=$(aws ec2 create-subnet \
--vpc-id $VPC_ID \
--cidr-block 172.1.0.0/20 \
--query 'Subnet.SubnetId' \
--output text)

echo "SUBNET_ID: $SUBNET_ID"

# Auto assign IPV4 Address
aws ec2 modify-subnet-attribute --subnet-id $SUBNET_ID --map-public-ip-on-launch


# Ensure Subnet was created successfully
if [ -z "$SUBNET_ID" ]; then
echo "Failed to create Subnet"
exit 1
fi

# Get the default route table ID for the VPC
RT_ID=$(aws ec2 describe-route-tables \
--filters "Name=vpc-id,Values=$VPC_ID" "Name=association.main,Values=true" \
--query "RouteTables[0].RouteTableId" \
--output text)

echo "RT_ID: $RT_ID"

# Associate the Route Table with the Subnet
aws ec2 associate-route-table \
--route-table-id $RT_ID \
--subnet-id $SUBNET_ID

echo "Successfully associated RT $RT_ID with Subnet $SUBNET_ID"


#Add a route for our Route Table to our IGW
aws ec2 create-route \
--route-table-id $RT_ID \
--destination-cidr-block 0.0.0.0/0 \
--gateway-id $IGW_ID

# Printout delete command
echo "./delete_vpc $VPC_ID $IGW_ID $SUBNET_ID $RT_ID"#!/usr/bin/env bash

# Create a VPC
VPC_ID=$(aws ec2 create-vpc \
--cidr-block "172.1.0.0/16" \
--tag-specifications 'ResourceType=vpc, Tags=[{Key=Name, Value=my-vpc-3}]' \
--region us-east-1 \
--query 'Vpc.VpcId' \
--output text)

echo "VPC_ID: $VPC_ID"

#Turn on DNS Hostnames
aws ec2 modify-vpc-attribute --vpc-id $VPC_ID --enable-dns-hostnames "{\"Value\":true}"

# Ensure VPC was created successfully
if [ -z "$VPC_ID" ]; then
echo "Failed to create VPC"
exit 1
fi

# Create an Internet Gateway (IGW)
IGW_ID=$(aws ec2 create-internet-gateway \
--query 'InternetGateway.InternetGatewayId' \
--output text)

echo "IGW_ID: $IGW_ID"

# Ensure IGW was created successfully
if [ -z "$IGW_ID" ]; then
echo "Failed to create Internet Gateway"
exit 1
fi

# Attach the IGW to the VPC
aws ec2 attach-internet-gateway --internet-gateway-id "$IGW_ID" --vpc-id "$VPC_ID"

echo "Successfully attached IGW $IGW_ID to VPC $VPC_ID"


# Create a Subnet
SUBNET_ID=$(aws ec2 create-subnet \
--vpc-id $VPC_ID \
--cidr-block 172.1.0.0/20 \
--query 'Subnet.SubnetId' \
--output text)

echo "SUBNET_ID: $SUBNET_ID"

# Auto assign IPV4 Address
aws ec2 modify-subnet-attribute --subnet-id $SUBNET_ID --map-public-ip-on-launch


# Ensure Subnet was created successfully
if [ -z "$SUBNET_ID" ]; then
echo "Failed to create Subnet"
exit 1
fi

# Get the default route table ID for the VPC
RT_ID=$(aws ec2 describe-route-tables \
--filters "Name=vpc-id,Values=$VPC_ID" "Name=association.main,Values=true" \
--query "RouteTables[0].RouteTableId" \
--output text)

echo "RT_ID: $RT_ID"

# Associate the Route Table with the Subnet
aws ec2 associate-route-table \
--route-table-id $RT_ID \
--subnet-id $SUBNET_ID

echo "Successfully associated RT $RT_ID with Subnet $SUBNET_ID"


#Add a route for our Route Table to our IGW
aws ec2 create-route \
--route-table-id $RT_ID \
--destination-cidr-block 0.0.0.0/0 \
--gateway-id $IGW_ID

# Printout delete command
echo "./delete_vpc $VPC_ID $IGW_ID $SUBNET_ID $RT_ID"